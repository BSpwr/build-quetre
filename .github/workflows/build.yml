name: Build Docker Image

on:
  schedule:
    - cron: "0 0 * * *"  # Once per day at midnight UTC
  workflow_dispatch:
    inputs:
      git_tag:
        description: Git Tag To Release From. Last Git Tag Is Used If Omitted
        required: false

jobs:
  build:
    name: Build Quetre
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get git info
        id: git-info
        run: |
          cd ./quetre
          tag='${{ github.event.inputs.git_tag }}'
          if [[ -z "${tag}" ]]; then
            tag=$(git describe --always --tags $(git rev-list --tags --max-count=1))
          fi
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          git checkout $tag
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Check Docker image exists
        id: inspect
        run: |
          image=ghcr.io/bspwr/quetre:latest
          docker pull $image
          hash=$(docker inspect --format '{{ index .Config.Labels "org.opencontainers.image.revision" }}' $image)
          [[ $hash != '${{ steps.git-info.outputs.hash }}' ]] && echo 'build=true' >> $GITHUB_OUTPUT || exit 0

      - name: Docker metadata
        if: ${{ steps.inspect.outputs.build == 'true' }}
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/bspwr/quetre
          labels: |
            org.opencontainers.image.title=quetre
            org.opencontainers.image.description=A libre front-end for Quora
            org.opencontainers.image.source=https://github.com/zyachel/quetre
            org.opencontainers.image.version=${{ steps.git-info.outputs.tag }}
            org.opencontainers.image.revision=${{ steps.git-info.outputs.hash }}

      - name: Set up Docker Buildx
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ./quetre
          file: ./Dockerfile
          push: true
          tags: ghcr.io/bspwr/quetre:latest, ghcr.io/bspwr/quetre:${{ steps.git-info.outputs.tag }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/bspwr/quetre:latest
          cache-to: type=inline
